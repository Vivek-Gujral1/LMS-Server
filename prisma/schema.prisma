// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  email            String
  name             String
  password         String
  avatar           String?
  verifyCode       String
  verifyCodeExpiry DateTime
  isVerified       Boolean  @default(false)
  refreshToken     String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  videos           Video[]
  courses          Course[] @relation("courseOwner")
  courseEnrollmentsID  String[] @db.ObjectId
  courseEnrollments Course[] @relation(fields: [courseEnrollmentsID] , references: [id])  

  @@map("users")
}

model Video {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  description   String
  videoFile     String
  thumbnail     String?
  duration      Int
  isActive      Boolean  @default(true)
  videoOwnerID  String   @db.ObjectId
  videoOwner    User     @relation(fields: [videoOwnerID], references: [id])
  videoCourseId String   @db.ObjectId
  videoCourse   Course   @relation(fields: [videoCourseId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("videos")
}

model Course {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  socketRoomName String
  videos      Video[]
  courseOwnerID String   @db.ObjectId
  courseOwner User @relation( "courseOwner",fields: [courseOwnerID]  , references: [id])
  enrolledUsersID String[] @db.ObjectId
  enrolledUsers  User[] @relation(fields: [enrolledUsersID] , references: [id])
  courseImage String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("courses")
}
